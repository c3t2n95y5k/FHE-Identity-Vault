/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEIdentityVault,
  FHEIdentityVaultInterface,
} from "../../src/FHEIdentityVault";

const _abi = [
  {
    inputs: [],
    name: "IdentityAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "IdentityNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "domicile",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "tier",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "IdentityCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "IdentityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "calculateAccessLevel",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedNetWorth",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "domicile",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "tier",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "pep",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "watchlist",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "riskScore",
        type: "uint8",
      },
    ],
    name: "createIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedNetWorth",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPlaintextData",
    outputs: [
      {
        internalType: "uint32",
        name: "domicile",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "tier",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "pep",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "watchlist",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "riskScore",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "createdAt",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "updatedAt",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasIdentity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "identities",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "encryptedNetWorth",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "domicile",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "tier",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "pep",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "watchlist",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "riskScore",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "createdAt",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "updatedAt",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalIdentities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedNetWorth",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "domicile",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "tier",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "pep",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "watchlist",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "riskScore",
        type: "uint8",
      },
    ],
    name: "updateIdentity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type FHEIdentityVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEIdentityVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEIdentityVault__factory extends ContractFactory {
  constructor(...args: FHEIdentityVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEIdentityVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEIdentityVault__factory {
    return super.connect(runner) as FHEIdentityVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEIdentityVaultInterface {
    return new Interface(_abi) as FHEIdentityVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEIdentityVault {
    return new Contract(address, _abi, runner) as unknown as FHEIdentityVault;
  }
}
