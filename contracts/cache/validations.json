{
  "version": "3.4",
  "log": [
    {
      "@fhevm/solidity/config/ZamaConfig.sol:EthereumConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:72",
        "version": {
          "withMetadata": "978afa19e7ca4a3802cfadcfe3254474dd93b403d404d003ff16c068567380fc",
          "withoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b",
          "linkedWithoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:73"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:55",
        "version": {
          "withMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "withoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "linkedWithoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SepoliaConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:56"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:14",
        "version": {
          "withMetadata": "03646030d350086dde817678f51931a4e10d8e0de99bf51a7d0bcb9a7debc97b",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:FHE": {
        "src": "@fhevm/solidity/lib/FHE.sol:38",
        "version": {
          "withMetadata": "4953423f9b95380d48f067adab03d29bb10431ef7bfeed752a3b0a091b4240fc",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/Impl.sol:Impl"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IDecryptionOracle": {
        "src": "@fhevm/solidity/lib/FHE.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestDecryption(uint256,bytes32[],bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IKMSVerifier": {
        "src": "@fhevm/solidity/lib/FHE.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyDecryptionEIP712KMSSignatures(bytes32[],bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IACL": {
        "src": "@fhevm/solidity/lib/Impl.sol:292",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowTransient(bytes32,address)",
          "allow(bytes32,address)",
          "cleanTransientStorage()",
          "isAllowed(bytes32,address)",
          "allowForDecryption(bytes32[])",
          "isAllowedForDecryption(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IFHEVMExecutor": {
        "src": "@fhevm/solidity/lib/Impl.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fheAdd(bytes32,bytes32,bytes1)",
          "fheSub(bytes32,bytes32,bytes1)",
          "fheMul(bytes32,bytes32,bytes1)",
          "fheDiv(bytes32,bytes32,bytes1)",
          "fheRem(bytes32,bytes32,bytes1)",
          "fheBitAnd(bytes32,bytes32,bytes1)",
          "fheBitOr(bytes32,bytes32,bytes1)",
          "fheBitXor(bytes32,bytes32,bytes1)",
          "fheShl(bytes32,bytes32,bytes1)",
          "fheShr(bytes32,bytes32,bytes1)",
          "fheRotl(bytes32,bytes32,bytes1)",
          "fheRotr(bytes32,bytes32,bytes1)",
          "fheEq(bytes32,bytes32,bytes1)",
          "fheNe(bytes32,bytes32,bytes1)",
          "fheGe(bytes32,bytes32,bytes1)",
          "fheGt(bytes32,bytes32,bytes1)",
          "fheLe(bytes32,bytes32,bytes1)",
          "fheLt(bytes32,bytes32,bytes1)",
          "fheMin(bytes32,bytes32,bytes1)",
          "fheMax(bytes32,bytes32,bytes1)",
          "fheNeg(bytes32)",
          "fheNot(bytes32)",
          "verifyCiphertext(bytes32,address,bytes,uint8)",
          "cast(bytes32,uint8)",
          "trivialEncrypt(uint256,uint8)",
          "fheIfThenElse(bytes32,bytes32,bytes32)",
          "fheRand(uint8)",
          "fheRandBounded(uint256,uint8)",
          "getInputVerifierAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IInputVerifier": {
        "src": "@fhevm/solidity/lib/Impl.sol:344",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cleanTransientStorage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:Impl": {
        "src": "@fhevm/solidity/lib/Impl.sol:356",
        "version": {
          "withMetadata": "32c008dbcb1564b07e41d5c6606dd6ef15563867c9abdea87e0c68597038aeac",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEBallot.sol:FHEBallot": {
        "src": "src/FHEBallot.sol:17",
        "version": {
          "withMetadata": "e4a14d3994494bc89a69f82c47ccc1e7774162f02056a1b1bcdde25eeeaa6158",
          "withoutMetadata": "e4a14d3994494bc89a69f82c47ccc1e7774162f02056a1b1bcdde25eeeaa6158",
          "linkedWithoutMetadata": "e4a14d3994494bc89a69f82c47ccc1e7774162f02056a1b1bcdde25eeeaa6158"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "requestDecryption(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "votingCounter()",
          "getTotalVotes(uint256)",
          "hasVoted(uint256,address)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)",
          "getVotingOptions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEBallot",
            "src": "src/FHEBallot.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)43455_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)43465_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43477_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)43432)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)43465_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)43437": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)43432": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)43477_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)43465_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)43432)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43477_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)43455_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VoteOption)43465_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)43477_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)43455_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)43437",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEIdentityVault.sol:FHEIdentityVault": {
        "src": "src/FHEIdentityVault.sol:19",
        "version": {
          "withMetadata": "50189e437481aded41239736eaa031923f55d331b4a79f3280626f7ed4cea570",
          "withoutMetadata": "50189e437481aded41239736eaa031923f55d331b4a79f3280626f7ed4cea570",
          "linkedWithoutMetadata": "50189e437481aded41239736eaa031923f55d331b4a79f3280626f7ed4cea570"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "createIdentity(bytes32,bytes,uint32,uint16,uint8,uint8,uint8)",
          "updateIdentity(bytes32,bytes,uint32,uint16,uint8,uint8,uint8)",
          "hasIdentity(address)",
          "getPlaintextData(address)",
          "getEncryptedNetWorth()",
          "calculateAccessLevel()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "identities",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(Identity)41250_storage)",
              "contract": "FHEIdentityVault",
              "src": "src/FHEIdentityVault.sol:61"
            },
            {
              "label": "totalIdentities",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FHEIdentityVault",
              "src": "src/FHEIdentityVault.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Identity)41250_storage)": {
              "label": "mapping(address => struct FHEIdentityVault.Identity)",
              "numberOfBytes": "32"
            },
            "t_struct(Identity)41250_storage": {
              "label": "struct FHEIdentityVault.Identity",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedNetWorth",
                  "type": "t_userDefinedValueType(euint64)39400",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "domicile",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tier",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "pep",
                  "type": "t_uint8",
                  "offset": 6,
                  "slot": "2"
                },
                {
                  "label": "watchlist",
                  "type": "t_uint8",
                  "offset": 7,
                  "slot": "2"
                },
                {
                  "label": "riskScore",
                  "type": "t_uint8",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint64",
                  "offset": 9,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint64",
                  "offset": 17,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 25,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_userDefinedValueType(euint64)39400": {
              "label": "euint64",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEQuadraticVoting.sol:FHEQuadraticVoting": {
        "src": "src/FHEQuadraticVoting.sol:14",
        "version": {
          "withMetadata": "36283c16990ee74c2114cfb15ad9e2730f87210b1b07754927c80619940c5069",
          "withoutMetadata": "36283c16990ee74c2114cfb15ad9e2730f87210b1b07754927c80619940c5069",
          "linkedWithoutMetadata": "36283c16990ee74c2114cfb15ad9e2730f87210b1b07754927c80619940c5069"
        },
        "inherit": [
          "src/IFHEVoting.sol:IFHEQuadraticVoting",
          "src/FHEBallot.sol:FHEBallot",
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "allocateCredits(uint256,address,uint256)",
          "setDefaultCredits(uint256,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)",
          "refundUnusedCredits(uint256,address)",
          "getVoteAllocation(uint256,address)",
          "getQuadraticTotals(uint256)",
          "verifyQuadraticAllocation(uint256,address)",
          "getVotingPowerDistribution(uint256)",
          "getQuadraticVotingStats(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEQuadraticVoting",
            "src": "src/FHEQuadraticVoting.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)43455_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)43465_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43477_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)43432)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            },
            {
              "label": "voteAllocations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43700_storage))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:17"
            },
            {
              "label": "voterCredits",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:18"
            },
            {
              "label": "defaultCredits",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:19"
            },
            {
              "label": "optionQuadraticTotals",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)43465_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_userDefinedValueType(euint32)39392)dyn_storage": {
              "label": "euint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)43437": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)43432": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(QuadraticVoteAllocation)43700_storage)": {
              "label": "mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)43477_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)43465_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)43432)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43700_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43477_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))": {
              "label": "mapping(uint256 => mapping(uint256 => euint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)43455_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(QuadraticVoteAllocation)43700_storage": {
              "label": "struct IFHEQuadraticVoting.QuadraticVoteAllocation",
              "members": [
                {
                  "label": "encryptedCredits",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedAllocations",
                  "type": "t_array(t_userDefinedValueType(euint32)39392)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalCreditsUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VoteOption)43465_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)43477_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)43455_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)43437",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEVotingBase.sol:FHEVotingBase": {
        "src": "src/FHEVotingBase.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "registerPublicKey(bytes32)",
          "emergencyPause()",
          "emergencyUnpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEVotingBase",
            "src": "src/FHEVotingBase.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEGovernance": {
        "src": "src/IFHEVoting.sol:192",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProposal(string,address,bytes,(string,string,uint8,uint256,uint256,uint256,bool,uint256))",
          "executeProposal(uint256)",
          "cancelProposal(uint256)",
          "getProposal(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEQuadraticVoting": {
        "src": "src/IFHEVoting.sol:161",
        "inherit": [
          "src/IFHEVoting.sol:IFHEVoting"
        ],
        "libraries": [],
        "methods": [
          "allocateCredits(uint256,address,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEVoting": {
        "src": "src/IFHEVoting.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "requestDecryption(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@fhevm/solidity/config/ZamaConfig.sol:EthereumConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:72",
        "version": {
          "withMetadata": "978afa19e7ca4a3802cfadcfe3254474dd93b403d404d003ff16c068567380fc",
          "withoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b",
          "linkedWithoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:73"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:55",
        "version": {
          "withMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "withoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "linkedWithoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SepoliaConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:56"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:14",
        "version": {
          "withMetadata": "03646030d350086dde817678f51931a4e10d8e0de99bf51a7d0bcb9a7debc97b",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:FHE": {
        "src": "@fhevm/solidity/lib/FHE.sol:38",
        "version": {
          "withMetadata": "4953423f9b95380d48f067adab03d29bb10431ef7bfeed752a3b0a091b4240fc",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/Impl.sol:Impl"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IDecryptionOracle": {
        "src": "@fhevm/solidity/lib/FHE.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestDecryption(uint256,bytes32[],bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IKMSVerifier": {
        "src": "@fhevm/solidity/lib/FHE.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyDecryptionEIP712KMSSignatures(bytes32[],bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IACL": {
        "src": "@fhevm/solidity/lib/Impl.sol:292",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowTransient(bytes32,address)",
          "allow(bytes32,address)",
          "cleanTransientStorage()",
          "isAllowed(bytes32,address)",
          "allowForDecryption(bytes32[])",
          "isAllowedForDecryption(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IFHEVMExecutor": {
        "src": "@fhevm/solidity/lib/Impl.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fheAdd(bytes32,bytes32,bytes1)",
          "fheSub(bytes32,bytes32,bytes1)",
          "fheMul(bytes32,bytes32,bytes1)",
          "fheDiv(bytes32,bytes32,bytes1)",
          "fheRem(bytes32,bytes32,bytes1)",
          "fheBitAnd(bytes32,bytes32,bytes1)",
          "fheBitOr(bytes32,bytes32,bytes1)",
          "fheBitXor(bytes32,bytes32,bytes1)",
          "fheShl(bytes32,bytes32,bytes1)",
          "fheShr(bytes32,bytes32,bytes1)",
          "fheRotl(bytes32,bytes32,bytes1)",
          "fheRotr(bytes32,bytes32,bytes1)",
          "fheEq(bytes32,bytes32,bytes1)",
          "fheNe(bytes32,bytes32,bytes1)",
          "fheGe(bytes32,bytes32,bytes1)",
          "fheGt(bytes32,bytes32,bytes1)",
          "fheLe(bytes32,bytes32,bytes1)",
          "fheLt(bytes32,bytes32,bytes1)",
          "fheMin(bytes32,bytes32,bytes1)",
          "fheMax(bytes32,bytes32,bytes1)",
          "fheNeg(bytes32)",
          "fheNot(bytes32)",
          "verifyCiphertext(bytes32,address,bytes,uint8)",
          "cast(bytes32,uint8)",
          "trivialEncrypt(uint256,uint8)",
          "fheIfThenElse(bytes32,bytes32,bytes32)",
          "fheRand(uint8)",
          "fheRandBounded(uint256,uint8)",
          "getInputVerifierAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IInputVerifier": {
        "src": "@fhevm/solidity/lib/Impl.sol:344",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cleanTransientStorage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:Impl": {
        "src": "@fhevm/solidity/lib/Impl.sol:356",
        "version": {
          "withMetadata": "32c008dbcb1564b07e41d5c6606dd6ef15563867c9abdea87e0c68597038aeac",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEBallot.sol:FHEBallot": {
        "src": "src/FHEBallot.sol:17",
        "version": {
          "withMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170",
          "withoutMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170",
          "linkedWithoutMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "requestDecryption(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "votingCounter()",
          "getTotalVotes(uint256)",
          "hasVoted(uint256,address)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)",
          "getVotingOptions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEBallot",
            "src": "src/FHEBallot.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)43406_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)43416_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43428_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)43383)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)43416_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)43388": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)43383": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)43428_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)43416_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)43383)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43428_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)43406_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VoteOption)43416_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)43428_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)43406_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)43388",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEIdentityVault.sol:FHEIdentityVault": {
        "src": "src/FHEIdentityVault.sol:19",
        "version": {
          "withMetadata": "d57b7a32f696cf538523542cea0b6192e10e9f33455d9c74212e8709eff09faa",
          "withoutMetadata": "d57b7a32f696cf538523542cea0b6192e10e9f33455d9c74212e8709eff09faa",
          "linkedWithoutMetadata": "d57b7a32f696cf538523542cea0b6192e10e9f33455d9c74212e8709eff09faa"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "createIdentity(bytes32,bytes,uint32,uint16,uint8,uint8,uint8)",
          "updateIdentity(bytes32,bytes,uint32,uint16,uint8,uint8,uint8)",
          "hasIdentity(address)",
          "getPlaintextData(address)",
          "getEncryptedNetWorth()",
          "calculateAccessLevel()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "identities",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(Identity)41238_storage)",
              "contract": "FHEIdentityVault",
              "src": "src/FHEIdentityVault.sol:61"
            },
            {
              "label": "totalIdentities",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FHEIdentityVault",
              "src": "src/FHEIdentityVault.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Identity)41238_storage)": {
              "label": "mapping(address => struct FHEIdentityVault.Identity)",
              "numberOfBytes": "32"
            },
            "t_struct(Identity)41238_storage": {
              "label": "struct FHEIdentityVault.Identity",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedNetWorth",
                  "type": "t_userDefinedValueType(euint64)39400",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "domicile",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tier",
                  "type": "t_uint16",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "pep",
                  "type": "t_uint8",
                  "offset": 6,
                  "slot": "2"
                },
                {
                  "label": "watchlist",
                  "type": "t_uint8",
                  "offset": 7,
                  "slot": "2"
                },
                {
                  "label": "riskScore",
                  "type": "t_uint8",
                  "offset": 8,
                  "slot": "2"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint64",
                  "offset": 9,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint64",
                  "offset": 17,
                  "slot": "2"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 25,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_userDefinedValueType(euint64)39400": {
              "label": "euint64",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            },
            "t_bytes32": {
              "label": "bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEQuadraticVoting.sol:FHEQuadraticVoting": {
        "src": "src/FHEQuadraticVoting.sol:14",
        "version": {
          "withMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18",
          "withoutMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18",
          "linkedWithoutMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18"
        },
        "inherit": [
          "src/IFHEVoting.sol:IFHEQuadraticVoting",
          "src/FHEBallot.sol:FHEBallot",
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "allocateCredits(uint256,address,uint256)",
          "setDefaultCredits(uint256,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)",
          "refundUnusedCredits(uint256,address)",
          "getVoteAllocation(uint256,address)",
          "getQuadraticTotals(uint256)",
          "verifyQuadraticAllocation(uint256,address)",
          "getVotingPowerDistribution(uint256)",
          "getQuadraticVotingStats(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEQuadraticVoting",
            "src": "src/FHEQuadraticVoting.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)43406_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)43416_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43428_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)43383)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            },
            {
              "label": "voteAllocations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43651_storage))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:17"
            },
            {
              "label": "voterCredits",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:18"
            },
            {
              "label": "defaultCredits",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:19"
            },
            {
              "label": "optionQuadraticTotals",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)43416_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_userDefinedValueType(euint32)39392)dyn_storage": {
              "label": "euint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)43388": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)43383": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(QuadraticVoteAllocation)43651_storage)": {
              "label": "mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)43428_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)43416_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)43383)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43651_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)43428_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))": {
              "label": "mapping(uint256 => mapping(uint256 => euint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)43406_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(QuadraticVoteAllocation)43651_storage": {
              "label": "struct IFHEQuadraticVoting.QuadraticVoteAllocation",
              "members": [
                {
                  "label": "encryptedCredits",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedAllocations",
                  "type": "t_array(t_userDefinedValueType(euint32)39392)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalCreditsUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VoteOption)43416_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)43428_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)43406_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)43388",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEVotingBase.sol:FHEVotingBase": {
        "src": "src/FHEVotingBase.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "registerPublicKey(bytes32)",
          "emergencyPause()",
          "emergencyUnpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEVotingBase",
            "src": "src/FHEVotingBase.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEGovernance": {
        "src": "src/IFHEVoting.sol:192",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProposal(string,address,bytes,(string,string,uint8,uint256,uint256,uint256,bool,uint256))",
          "executeProposal(uint256)",
          "cancelProposal(uint256)",
          "getProposal(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEQuadraticVoting": {
        "src": "src/IFHEVoting.sol:161",
        "inherit": [
          "src/IFHEVoting.sol:IFHEVoting"
        ],
        "libraries": [],
        "methods": [
          "allocateCredits(uint256,address,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEVoting": {
        "src": "src/IFHEVoting.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "requestDecryption(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@fhevm/solidity/config/ZamaConfig.sol:EthereumConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:72",
        "version": {
          "withMetadata": "978afa19e7ca4a3802cfadcfe3254474dd93b403d404d003ff16c068567380fc",
          "withoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b",
          "linkedWithoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:73"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:55",
        "version": {
          "withMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "withoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "linkedWithoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SepoliaConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:56"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:14",
        "version": {
          "withMetadata": "03646030d350086dde817678f51931a4e10d8e0de99bf51a7d0bcb9a7debc97b",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:FHE": {
        "src": "@fhevm/solidity/lib/FHE.sol:38",
        "version": {
          "withMetadata": "4953423f9b95380d48f067adab03d29bb10431ef7bfeed752a3b0a091b4240fc",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/Impl.sol:Impl"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IDecryptionOracle": {
        "src": "@fhevm/solidity/lib/FHE.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestDecryption(uint256,bytes32[],bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IKMSVerifier": {
        "src": "@fhevm/solidity/lib/FHE.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyDecryptionEIP712KMSSignatures(bytes32[],bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IACL": {
        "src": "@fhevm/solidity/lib/Impl.sol:292",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowTransient(bytes32,address)",
          "allow(bytes32,address)",
          "cleanTransientStorage()",
          "isAllowed(bytes32,address)",
          "allowForDecryption(bytes32[])",
          "isAllowedForDecryption(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IFHEVMExecutor": {
        "src": "@fhevm/solidity/lib/Impl.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fheAdd(bytes32,bytes32,bytes1)",
          "fheSub(bytes32,bytes32,bytes1)",
          "fheMul(bytes32,bytes32,bytes1)",
          "fheDiv(bytes32,bytes32,bytes1)",
          "fheRem(bytes32,bytes32,bytes1)",
          "fheBitAnd(bytes32,bytes32,bytes1)",
          "fheBitOr(bytes32,bytes32,bytes1)",
          "fheBitXor(bytes32,bytes32,bytes1)",
          "fheShl(bytes32,bytes32,bytes1)",
          "fheShr(bytes32,bytes32,bytes1)",
          "fheRotl(bytes32,bytes32,bytes1)",
          "fheRotr(bytes32,bytes32,bytes1)",
          "fheEq(bytes32,bytes32,bytes1)",
          "fheNe(bytes32,bytes32,bytes1)",
          "fheGe(bytes32,bytes32,bytes1)",
          "fheGt(bytes32,bytes32,bytes1)",
          "fheLe(bytes32,bytes32,bytes1)",
          "fheLt(bytes32,bytes32,bytes1)",
          "fheMin(bytes32,bytes32,bytes1)",
          "fheMax(bytes32,bytes32,bytes1)",
          "fheNeg(bytes32)",
          "fheNot(bytes32)",
          "verifyCiphertext(bytes32,address,bytes,uint8)",
          "cast(bytes32,uint8)",
          "trivialEncrypt(uint256,uint8)",
          "fheIfThenElse(bytes32,bytes32,bytes32)",
          "fheRand(uint8)",
          "fheRandBounded(uint256,uint8)",
          "getInputVerifierAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IInputVerifier": {
        "src": "@fhevm/solidity/lib/Impl.sol:344",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cleanTransientStorage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:Impl": {
        "src": "@fhevm/solidity/lib/Impl.sol:356",
        "version": {
          "withMetadata": "32c008dbcb1564b07e41d5c6606dd6ef15563867c9abdea87e0c68597038aeac",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEBallot.sol:FHEBallot": {
        "src": "src/FHEBallot.sol:17",
        "version": {
          "withMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170",
          "withoutMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170",
          "linkedWithoutMetadata": "db893cdfc58c217f2ce74e672ffe8a3347c068568346f43b0bb8ebaec493f170"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "requestDecryption(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "votingCounter()",
          "getTotalVotes(uint256)",
          "hasVoted(uint256,address)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)",
          "getVotingOptions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEBallot",
            "src": "src/FHEBallot.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42784)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42817_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42789": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42784": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42829_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42784)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VoteOption)42817_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42829_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42807_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42789",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEQuadraticVoting.sol:FHEQuadraticVoting": {
        "src": "src/FHEQuadraticVoting.sol:14",
        "version": {
          "withMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18",
          "withoutMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18",
          "linkedWithoutMetadata": "d7fbd80041f441780b4116073744d8652d88e7fd6867e60ac42ccaa950e50e18"
        },
        "inherit": [
          "src/IFHEVoting.sol:IFHEQuadraticVoting",
          "src/FHEBallot.sol:FHEBallot",
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "allocateCredits(uint256,address,uint256)",
          "setDefaultCredits(uint256,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)",
          "refundUnusedCredits(uint256,address)",
          "getVoteAllocation(uint256,address)",
          "getQuadraticTotals(uint256)",
          "verifyQuadraticAllocation(uint256,address)",
          "getVotingPowerDistribution(uint256)",
          "getQuadraticVotingStats(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEQuadraticVoting",
            "src": "src/FHEQuadraticVoting.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42784)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            },
            {
              "label": "voteAllocations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:17"
            },
            {
              "label": "voterCredits",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:18"
            },
            {
              "label": "defaultCredits",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:19"
            },
            {
              "label": "optionQuadraticTotals",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42817_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_userDefinedValueType(euint32)39392)dyn_storage": {
              "label": "euint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42789": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42784": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage)": {
              "label": "mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42829_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42784)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))": {
              "label": "mapping(uint256 => mapping(uint256 => euint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(QuadraticVoteAllocation)43052_storage": {
              "label": "struct IFHEQuadraticVoting.QuadraticVoteAllocation",
              "members": [
                {
                  "label": "encryptedCredits",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedAllocations",
                  "type": "t_array(t_userDefinedValueType(euint32)39392)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalCreditsUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VoteOption)42817_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42829_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42807_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42789",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEVotingBase.sol:FHEVotingBase": {
        "src": "src/FHEVotingBase.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "registerPublicKey(bytes32)",
          "emergencyPause()",
          "emergencyUnpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEVotingBase",
            "src": "src/FHEVotingBase.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEGovernance": {
        "src": "src/IFHEVoting.sol:192",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProposal(string,address,bytes,(string,string,uint8,uint256,uint256,uint256,bool,uint256))",
          "executeProposal(uint256)",
          "cancelProposal(uint256)",
          "getProposal(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEQuadraticVoting": {
        "src": "src/IFHEVoting.sol:161",
        "inherit": [
          "src/IFHEVoting.sol:IFHEVoting"
        ],
        "libraries": [],
        "methods": [
          "allocateCredits(uint256,address,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEVoting": {
        "src": "src/IFHEVoting.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "requestDecryption(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@fhevm/solidity/config/ZamaConfig.sol:EthereumConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:72",
        "version": {
          "withMetadata": "978afa19e7ca4a3802cfadcfe3254474dd93b403d404d003ff16c068567380fc",
          "withoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b",
          "linkedWithoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:73"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:55",
        "version": {
          "withMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "withoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "linkedWithoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SepoliaConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:56"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:14",
        "version": {
          "withMetadata": "03646030d350086dde817678f51931a4e10d8e0de99bf51a7d0bcb9a7debc97b",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:FHE": {
        "src": "@fhevm/solidity/lib/FHE.sol:38",
        "version": {
          "withMetadata": "4953423f9b95380d48f067adab03d29bb10431ef7bfeed752a3b0a091b4240fc",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/Impl.sol:Impl"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IDecryptionOracle": {
        "src": "@fhevm/solidity/lib/FHE.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestDecryption(uint256,bytes32[],bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IKMSVerifier": {
        "src": "@fhevm/solidity/lib/FHE.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyDecryptionEIP712KMSSignatures(bytes32[],bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IACL": {
        "src": "@fhevm/solidity/lib/Impl.sol:292",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowTransient(bytes32,address)",
          "allow(bytes32,address)",
          "cleanTransientStorage()",
          "isAllowed(bytes32,address)",
          "allowForDecryption(bytes32[])",
          "isAllowedForDecryption(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IFHEVMExecutor": {
        "src": "@fhevm/solidity/lib/Impl.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fheAdd(bytes32,bytes32,bytes1)",
          "fheSub(bytes32,bytes32,bytes1)",
          "fheMul(bytes32,bytes32,bytes1)",
          "fheDiv(bytes32,bytes32,bytes1)",
          "fheRem(bytes32,bytes32,bytes1)",
          "fheBitAnd(bytes32,bytes32,bytes1)",
          "fheBitOr(bytes32,bytes32,bytes1)",
          "fheBitXor(bytes32,bytes32,bytes1)",
          "fheShl(bytes32,bytes32,bytes1)",
          "fheShr(bytes32,bytes32,bytes1)",
          "fheRotl(bytes32,bytes32,bytes1)",
          "fheRotr(bytes32,bytes32,bytes1)",
          "fheEq(bytes32,bytes32,bytes1)",
          "fheNe(bytes32,bytes32,bytes1)",
          "fheGe(bytes32,bytes32,bytes1)",
          "fheGt(bytes32,bytes32,bytes1)",
          "fheLe(bytes32,bytes32,bytes1)",
          "fheLt(bytes32,bytes32,bytes1)",
          "fheMin(bytes32,bytes32,bytes1)",
          "fheMax(bytes32,bytes32,bytes1)",
          "fheNeg(bytes32)",
          "fheNot(bytes32)",
          "verifyCiphertext(bytes32,address,bytes,uint8)",
          "cast(bytes32,uint8)",
          "trivialEncrypt(uint256,uint8)",
          "fheIfThenElse(bytes32,bytes32,bytes32)",
          "fheRand(uint8)",
          "fheRandBounded(uint256,uint8)",
          "getInputVerifierAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IInputVerifier": {
        "src": "@fhevm/solidity/lib/Impl.sol:344",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cleanTransientStorage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:Impl": {
        "src": "@fhevm/solidity/lib/Impl.sol:356",
        "version": {
          "withMetadata": "32c008dbcb1564b07e41d5c6606dd6ef15563867c9abdea87e0c68597038aeac",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEBallot.sol:FHEBallot": {
        "src": "src/FHEBallot.sol:17",
        "version": {
          "withMetadata": "ba6d2808584fbddddfda88300aceae19499007b8bf6e83e28232482758926e52",
          "withoutMetadata": "ba6d2808584fbddddfda88300aceae19499007b8bf6e83e28232482758926e52",
          "linkedWithoutMetadata": "ba6d2808584fbddddfda88300aceae19499007b8bf6e83e28232482758926e52"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "requestDecryption(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "votingCounter()",
          "getTotalVotes(uint256)",
          "hasVoted(uint256,address)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)",
          "getVotingOptions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEBallot",
            "src": "src/FHEBallot.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42784)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42817_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42789": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42784": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42829_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42784)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VoteOption)42817_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42829_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42807_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42789",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEQuadraticVoting.sol:FHEQuadraticVoting": {
        "src": "src/FHEQuadraticVoting.sol:14",
        "version": {
          "withMetadata": "8399e9a1f30101c85a61e20d498570be813f07e07a57e77a3a4d0d0de7949dc6",
          "withoutMetadata": "8399e9a1f30101c85a61e20d498570be813f07e07a57e77a3a4d0d0de7949dc6",
          "linkedWithoutMetadata": "8399e9a1f30101c85a61e20d498570be813f07e07a57e77a3a4d0d0de7949dc6"
        },
        "inherit": [
          "src/IFHEVoting.sol:IFHEQuadraticVoting",
          "src/FHEBallot.sol:FHEBallot",
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "allocateCredits(uint256,address,uint256)",
          "setDefaultCredits(uint256,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)",
          "refundUnusedCredits(uint256,address)",
          "getVoteAllocation(uint256,address)",
          "getQuadraticTotals(uint256)",
          "verifyQuadraticAllocation(uint256,address)",
          "getVotingPowerDistribution(uint256)",
          "getQuadraticVotingStats(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEQuadraticVoting",
            "src": "src/FHEQuadraticVoting.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:19"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42784)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:29"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:31"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:35"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:39"
            },
            {
              "label": "voteAllocations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:17"
            },
            {
              "label": "voterCredits",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:18"
            },
            {
              "label": "defaultCredits",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:19"
            },
            {
              "label": "optionQuadraticTotals",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42817_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_userDefinedValueType(euint32)39392)dyn_storage": {
              "label": "euint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42789": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42784": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage)": {
              "label": "mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42829_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42817_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42784)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43052_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42829_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))": {
              "label": "mapping(uint256 => mapping(uint256 => euint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42807_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(QuadraticVoteAllocation)43052_storage": {
              "label": "struct IFHEQuadraticVoting.QuadraticVoteAllocation",
              "members": [
                {
                  "label": "encryptedCredits",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedAllocations",
                  "type": "t_array(t_userDefinedValueType(euint32)39392)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalCreditsUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VoteOption)42817_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42829_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42807_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42789",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEVotingBase.sol:FHEVotingBase": {
        "src": "src/FHEVotingBase.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "registerPublicKey(bytes32)",
          "emergencyPause()",
          "emergencyUnpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEVotingBase",
            "src": "src/FHEVotingBase.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEGovernance": {
        "src": "src/IFHEVoting.sol:192",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProposal(string,address,bytes,(string,string,uint8,uint256,uint256,uint256,bool,uint256))",
          "executeProposal(uint256)",
          "cancelProposal(uint256)",
          "getProposal(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEQuadraticVoting": {
        "src": "src/IFHEVoting.sol:161",
        "inherit": [
          "src/IFHEVoting.sol:IFHEVoting"
        ],
        "libraries": [],
        "methods": [
          "allocateCredits(uint256,address,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEVoting": {
        "src": "src/IFHEVoting.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "castVote(uint256,bytes32,bytes)",
          "castWeightedVote(uint256,bytes32,uint256,bytes)",
          "castQuadraticVote(uint256,externalEuint32[],uint256[],bytes)",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "requestDecryption(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@fhevm/solidity/config/ZamaConfig.sol:EthereumConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:72",
        "version": {
          "withMetadata": "978afa19e7ca4a3802cfadcfe3254474dd93b403d404d003ff16c068567380fc",
          "withoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b",
          "linkedWithoutMetadata": "9bd1e753938a42caca579bcd60dd9627aa6e097d0d9a50903f461b529ee1da1b"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:73"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:55",
        "version": {
          "withMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "withoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0",
          "linkedWithoutMetadata": "0050bf4977b224c7e7883e35d6e77b9573076128b15ba42f0889b96637ea6de0"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE",
          "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig"
        ],
        "methods": [
          "()",
          "protocolId()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SepoliaConfig",
            "src": "@fhevm/solidity/config/ZamaConfig.sol:56"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/config/ZamaConfig.sol:ZamaConfig": {
        "src": "@fhevm/solidity/config/ZamaConfig.sol:14",
        "version": {
          "withMetadata": "03646030d350086dde817678f51931a4e10d8e0de99bf51a7d0bcb9a7debc97b",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:FHE": {
        "src": "@fhevm/solidity/lib/FHE.sol:38",
        "version": {
          "withMetadata": "4953423f9b95380d48f067adab03d29bb10431ef7bfeed752a3b0a091b4240fc",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [
          "@fhevm/solidity/lib/Impl.sol:Impl"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IDecryptionOracle": {
        "src": "@fhevm/solidity/lib/FHE.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "requestDecryption(uint256,bytes32[],bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/FHE.sol:IKMSVerifier": {
        "src": "@fhevm/solidity/lib/FHE.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyDecryptionEIP712KMSSignatures(bytes32[],bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IACL": {
        "src": "@fhevm/solidity/lib/Impl.sol:292",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowTransient(bytes32,address)",
          "allow(bytes32,address)",
          "cleanTransientStorage()",
          "isAllowed(bytes32,address)",
          "allowForDecryption(bytes32[])",
          "isAllowedForDecryption(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IFHEVMExecutor": {
        "src": "@fhevm/solidity/lib/Impl.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fheAdd(bytes32,bytes32,bytes1)",
          "fheSub(bytes32,bytes32,bytes1)",
          "fheMul(bytes32,bytes32,bytes1)",
          "fheDiv(bytes32,bytes32,bytes1)",
          "fheRem(bytes32,bytes32,bytes1)",
          "fheBitAnd(bytes32,bytes32,bytes1)",
          "fheBitOr(bytes32,bytes32,bytes1)",
          "fheBitXor(bytes32,bytes32,bytes1)",
          "fheShl(bytes32,bytes32,bytes1)",
          "fheShr(bytes32,bytes32,bytes1)",
          "fheRotl(bytes32,bytes32,bytes1)",
          "fheRotr(bytes32,bytes32,bytes1)",
          "fheEq(bytes32,bytes32,bytes1)",
          "fheNe(bytes32,bytes32,bytes1)",
          "fheGe(bytes32,bytes32,bytes1)",
          "fheGt(bytes32,bytes32,bytes1)",
          "fheLe(bytes32,bytes32,bytes1)",
          "fheLt(bytes32,bytes32,bytes1)",
          "fheMin(bytes32,bytes32,bytes1)",
          "fheMax(bytes32,bytes32,bytes1)",
          "fheNeg(bytes32)",
          "fheNot(bytes32)",
          "verifyCiphertext(bytes32,address,bytes,uint8)",
          "cast(bytes32,uint8)",
          "trivialEncrypt(uint256,uint8)",
          "fheIfThenElse(bytes32,bytes32,bytes32)",
          "fheRand(uint8)",
          "fheRandBounded(uint256,uint8)",
          "getInputVerifierAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:IInputVerifier": {
        "src": "@fhevm/solidity/lib/Impl.sol:344",
        "inherit": [],
        "libraries": [],
        "methods": [
          "cleanTransientStorage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@fhevm/solidity/lib/Impl.sol:Impl": {
        "src": "@fhevm/solidity/lib/Impl.sol:356",
        "version": {
          "withMetadata": "32c008dbcb1564b07e41d5c6606dd6ef15563867c9abdea87e0c68597038aeac",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEBallot.sol:FHEBallot": {
        "src": "src/FHEBallot.sol:16",
        "version": {
          "withMetadata": "ef572f3e39b1c8ce831333ef9e3ff544753ff748a509b964e9876d8b384169d5",
          "withoutMetadata": "ef572f3e39b1c8ce831333ef9e3ff544753ff748a509b964e9876d8b384169d5",
          "linkedWithoutMetadata": "ef572f3e39b1c8ce831333ef9e3ff544753ff748a509b964e9876d8b384169d5"
        },
        "inherit": [
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "castVote(uint256,bytes,bytes)",
          "castWeightedVote(uint256,bytes,uint256,bytes)",
          "castQuadraticVote(uint256,bytes[],uint256[],bytes)",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "requestDecryption(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "votingCounter()",
          "getTotalVotes(uint256)",
          "hasVoted(uint256,address)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)",
          "getVotingOptions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEBallot",
            "src": "src/FHEBallot.sol:91"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:18"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42838_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:21"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42848_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42860_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42815)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:30"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:33"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:37"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42848_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42820": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42815": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42860_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42848_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42815)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42860_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42838_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VoteOption)42848_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42860_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42838_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42820",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEQuadraticVoting.sol:FHEQuadraticVoting": {
        "src": "src/FHEQuadraticVoting.sol:13",
        "version": {
          "withMetadata": "a53a7d1093a6b01290f06bd68f6b9141db896c18217e37b219d2154c13cb0def",
          "withoutMetadata": "a53a7d1093a6b01290f06bd68f6b9141db896c18217e37b219d2154c13cb0def",
          "linkedWithoutMetadata": "a53a7d1093a6b01290f06bd68f6b9141db896c18217e37b219d2154c13cb0def"
        },
        "inherit": [
          "src/IFHEVoting.sol:IFHEQuadraticVoting",
          "src/FHEBallot.sol:FHEBallot",
          "@fhevm/solidity/config/ZamaConfig.sol:SepoliaConfig",
          "src/IFHEVoting.sol:IFHEVoting",
          "src/FHEVotingBase.sol:FHEVotingBase",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "()",
          "castQuadraticVote(uint256,bytes[],uint256[],bytes)",
          "allocateCredits(uint256,address,uint256)",
          "setDefaultCredits(uint256,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)",
          "refundUnusedCredits(uint256,address)",
          "getVoteAllocation(uint256,address)",
          "getQuadraticTotals(uint256)",
          "verifyQuadraticAllocation(uint256,address)",
          "getVotingPowerDistribution(uint256)",
          "getQuadraticVotingStats(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEQuadraticVoting",
            "src": "src/FHEQuadraticVoting.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            },
            {
              "label": "votingIdCounter",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:18"
            },
            {
              "label": "votingConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(VotingConfig)42838_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:21"
            },
            {
              "label": "votingOptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_struct(VoteOption)42848_storage)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:22"
            },
            {
              "label": "voterInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42860_storage))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:23"
            },
            {
              "label": "votingStatus",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_enum(VotingStatus)42815)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:24"
            },
            {
              "label": "totalVoters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:25"
            },
            {
              "label": "decryptedResults",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:26"
            },
            {
              "label": "resultsDecrypted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:27"
            },
            {
              "label": "encryptedTotalVotes",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:28"
            },
            {
              "label": "votingCreator",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:30"
            },
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:33"
            },
            {
              "label": "whitelistCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:34"
            },
            {
              "label": "decryptionRequestId",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:37"
            },
            {
              "label": "requestIdToVotingId",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEBallot",
              "src": "src/FHEBallot.sol:38"
            },
            {
              "label": "voteAllocations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43080_storage))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:16"
            },
            {
              "label": "voterCredits",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:17"
            },
            {
              "label": "defaultCredits",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:18"
            },
            {
              "label": "optionQuadraticTotals",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))",
              "contract": "FHEQuadraticVoting",
              "src": "src/FHEQuadraticVoting.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(VoteOption)42848_storage)dyn_storage": {
              "label": "struct IFHEVoting.VoteOption[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_userDefinedValueType(euint32)39392)dyn_storage": {
              "label": "euint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(VoteType)42820": {
              "label": "enum IFHEVoting.VoteType",
              "members": [
                "SingleChoice",
                "MultiChoice",
                "Weighted",
                "Quadratic"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingStatus)42815": {
              "label": "enum IFHEVoting.VotingStatus",
              "members": [
                "NotStarted",
                "Active",
                "Ended",
                "Tallied"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(QuadraticVoteAllocation)43080_storage)": {
              "label": "mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(VoterInfo)42860_storage)": {
              "label": "mapping(address => struct IFHEVoting.VoterInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(VoteOption)42848_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VoteOption[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(VotingStatus)42815)": {
              "label": "mapping(uint256 => enum IFHEVoting.VotingStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(QuadraticVoteAllocation)43080_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEQuadraticVoting.QuadraticVoteAllocation))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(VoterInfo)42860_storage))": {
              "label": "mapping(uint256 => mapping(address => struct IFHEVoting.VoterInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_userDefinedValueType(euint32)39392))": {
              "label": "mapping(uint256 => mapping(uint256 => euint32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VotingConfig)42838_storage)": {
              "label": "mapping(uint256 => struct IFHEVoting.VotingConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_userDefinedValueType(euint32)39392)": {
              "label": "mapping(uint256 => euint32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(QuadraticVoteAllocation)43080_storage": {
              "label": "struct IFHEQuadraticVoting.QuadraticVoteAllocation",
              "members": [
                {
                  "label": "encryptedCredits",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "encryptedAllocations",
                  "type": "t_array(t_userDefinedValueType(euint32)39392)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalCreditsUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VoteOption)42848_storage": {
              "label": "struct IFHEVoting.VoteOption",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedVoteCount",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VoterInfo)42860_storage": {
              "label": "struct IFHEVoting.VoterInfo",
              "members": [
                {
                  "label": "hasVoted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isWhitelisted",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "votingPower",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedChoice",
                  "type": "t_userDefinedValueType(euint32)39392",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "voteTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(VotingConfig)42838_storage": {
              "label": "struct IFHEVoting.VotingConfig",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "voteType",
                  "type": "t_enum(VoteType)42820",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "quorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "whitelistEnabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxVotersCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_userDefinedValueType(euint32)39392": {
              "label": "euint32",
              "numberOfBytes": "32",
              "underlying": "t_bytes32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/FHEVotingBase.sol:FHEVotingBase": {
        "src": "src/FHEVotingBase.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@fhevm/solidity/lib/FHE.sol:FHE"
        ],
        "methods": [
          "registerPublicKey(bytes32)",
          "emergencyPause()",
          "emergencyUnpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FHEVotingBase",
            "src": "src/FHEVotingBase.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "userPublicKeys",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:23"
            },
            {
              "label": "validProofs",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "FHEVotingBase",
              "src": "src/FHEVotingBase.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEGovernance": {
        "src": "src/IFHEVoting.sol:191",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProposal(string,address,bytes,(string,string,uint8,uint256,uint256,uint256,bool,uint256))",
          "executeProposal(uint256)",
          "cancelProposal(uint256)",
          "getProposal(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEQuadraticVoting": {
        "src": "src/IFHEVoting.sol:160",
        "inherit": [
          "src/IFHEVoting.sol:IFHEVoting"
        ],
        "libraries": [],
        "methods": [
          "allocateCredits(uint256,address,uint256)",
          "getVoterCredits(uint256,address)",
          "calculateQuadraticCost(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/IFHEVoting.sol:IFHEVoting": {
        "src": "src/IFHEVoting.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "castVote(uint256,bytes,bytes)",
          "castWeightedVote(uint256,bytes,uint256,bytes)",
          "castQuadraticVote(uint256,bytes[],uint256[],bytes)",
          "createVoting((string,string,uint8,uint256,uint256,uint256,bool,uint256),string[],string[])",
          "whitelistVoters(uint256,address[],uint256[])",
          "startVoting(uint256)",
          "endVoting(uint256)",
          "getVotingStatus(uint256)",
          "getVotingConfig(uint256)",
          "getVoterInfo(uint256,address)",
          "getTotalVoters(uint256)",
          "isQuorumReached(uint256)",
          "requestDecryption(uint256)",
          "getDecryptedResults(uint256)",
          "getWinningOption(uint256)",
          "reencryptVote(uint256,address,bytes32)",
          "verifyVoteIntegrity(uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "src/MockFHE.sol:MockFHE": {
        "src": "src/MockFHE.sol:10",
        "version": {
          "withMetadata": "547fb4fdaf5e6241de4a8df25d9ee716a63ce065c27c210ce0b333a669383292",
          "withoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157",
          "linkedWithoutMetadata": "95d40a2c1c3f26a6a79fd4d364874e56c7fd721151816483687512865903c157"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    }
  ]
}